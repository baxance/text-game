/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package text.game;

import org.checkerframework.checker.units.qual.A;

import java.util.Random;
import java.util.Scanner;

public class App {

    //System objects
    Scanner input = new Scanner(System.in); // user input
    Random random = new Random(); // RNG

    int HP;
    int AP;
    int potion;
    String name;
    String weapon;
    int choice;
    int enemyHealth;

    public static void main(String[] args) {

        App dungeon;
        dungeon = new App();

        dungeon.playerSetUp();
        dungeon.graveyardGate();
    }

    public void playerSetUp() {
        HP = 100;
        AP = 10;
        potion = 5;
        int potionHealing = 25;
//        int potionDrop = 15; //percent chance
        String[] weapons = {"knife"};

        System.out.println("Please enter your name: ");
        name = input.nextLine();
        System.out.println("Hello, " + name + " let's play a game");

//        for (String weapon : weapons) {
//            System.out.println("You have a... " + weapon);
//        }
    }

    public void combat(){
        //PLAYER CHARACTER
        HP = 100;
        AP = 10;
        potion = 5;
        int potionHealing = 25;
        String[] weapons = {"sword", "club"};

        //ENEMIES
        String[] enemies = {"corpse rat", "skeleton", "zombie",}; // put enemies in a JSON with key/values of base AP, base HP, etc and pull a random one from there
        int enemyBaseHP = 25;
        int enemyBaseAP = 5;

        //COMBAT
            int enemySelect = random.nextInt(enemies.length);
            String enemy = enemies[enemySelect];

            while(enemyActualHP > 0)
            for (int i = 0; i < enemies.length; i++){
                int enemyActualHP = random.nextInt(enemyBaseHP + (random.nextInt(10) * i));
                int enemyActualAP = random.nextInt(enemyBaseAP + (random.nextInt(5) * i));
            }


            if (enemy == 0){

                System.out.println("\t# " + enemies[enemy] + " appeared! #\n");
                for (int i = 0; i <weapons.length; i++){
                    System.out.println(i + ": attack with " + weapons[i] + "?");
                }
            }

            for (int i = 0; i <weapons.length; i++){
                System.out.println(i + ": attack with " + weapons[i] + "?");
            }

    }

    public void graveyardGate() {
        System.out.println("\n--------------------------------------------------------------\n");
        System.out.println("The carriage comes to a halt as you arrive at dusk to the grand and neglected gates of the royal cemetery.");
        System.out.println("You hesitate to breathe the heavy air, but having no choice you submit to the ghoulish inhalation of human decay.");
        System.out.println("The carriage has yet to leave. Are you sure you want to proceed?");
        System.out.println("");
        System.out.println("1: Press on!");
        System.out.println("2: Abandon your quest.");
        System.out.println("\n--------------------------------------------------------------\n");

        choice = input.nextInt();

        if (choice == 1){
            graveyardGrounds();
        }
        else {
            System.out.println("\n--------------------------------------------------------------\n");
            System.out.println("With shoulders slumped and a trembling gait your eyes look away from the driver in shame as you return expectedly to the carriage and leave.");
            System.out.println("You live a long life defined by mediocrity. The shame and regret of this decision weighs upon you more every year until the day you die to neither fame nor sadness");
            System.out.println("GAME OVER.");
            System.out.println("");
            System.out.println("1: Try again?");
            System.out.println("\n--------------------------------------------------------------\n");

            choice = input.nextInt();

            if (choice == 1){
                playerSetUp();
            }
        }

    }

    public void graveyardGrounds(){
        int encounter = random.nextInt(10);
        if (encounter > 7){
            combat();
        }
        System.out.println("\n--------------------------------------------------------------\n");
        System.out.println("");
        System.out.println("");
        System.out.println("");
        System.out.println("");
        System.out.println("1: ");
        System.out.println("2: ");
        System.out.println("\n--------------------------------------------------------------\n");

        choice = input.nextInt();

    }

}




//
//        //Game Variables
//
//        String[] enemies = {"rat", "slime", "skeleton", "zombie", "necromancer", "lich"};
//        int maxEnemyHP = 100;
//        int enemyAP = 5;
//
//        boolean running = true;
//
//        GAME: // label for the while loop created by the colon
//        while(running) {
//            System.out.println("----------------------------------------------");
//            int enemyHealth = random.nextInt(maxEnemyHP);
//            String enemy = enemies[random.nextInt(enemies.length)];
//            System.out.println("\t# " + enemy + " appeared! #\n");
//            System.out.println();
//        }
//
//    }
//
//
//    boolean running = true;
//
//    while()
//
//
//
//}
